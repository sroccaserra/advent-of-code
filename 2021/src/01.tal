~src/macros.tal

%HUGE { #0fff }

( devices )

|00 @System     [ &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1 ]
|10 @Console    [ &vector $2 &read $1 &pad $5 &write $1 &error $1 ]
|20 @Screen     [ &vector $2 &width $2 &height $2 &pad $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|a0 @File       [ &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2 ]

( zero page )

|00
@previous [ &1 $2 &2 $2 &3 $2 ]
@result   [ &1 $2 &2 $2 ]
@buffer   [ &length $1 &data $f ]

( program )

|0100
    HUGE .previous/1 STZ2
    HUGE .previous/2 STZ2
    HUGE .previous/3 STZ2
    #0000 .result/1 STZ2
    #0000 .result/2 STZ2

    ;filename ,stream JSR

    .result/1 LDZ2 ;print-dec JSR2 LF
    .result/2 LDZ2 ;print-dec JSR2 LF
    HALT
BRK

@stream ( addr* -- )
    .File/name DEO2
    #0001 .File/length DEO2

    &loop
    ;&char .File/read DEO2
    ,&char LDR EOL? ,&eol JCN

    ,&char LDR .buffer/length LDZ .buffer/data + STZ
    .buffer/length LDZk INC SWP STZ
    ,&continue JMP

    &eol
    #00 .buffer/length LDZ .buffer/data + STZ
    ,on-line JSR
    #00 .buffer/length STZ

    &continue
    .File/success DEI2 #0000 NEQ2 ,&loop JCN
RTN
&char $1

@on-line ( -- )
    .buffer/length LDZ #00 EQU ,&end JCN
    .buffer/data ;to-hex-zp JSR2 ( n )

    ( part-one )
    DUP2
    .previous/1 LDZ2 ( n n previous/1 )
    GTH2 #00 SWP ( #0000 or #0001 )
    .result/1 LDZ2 ADD2 .result/1 STZ2

    ( part-two )
    DUP2
    .previous/3 LDZ2 ( no need to sum, compare n & p3 )
    GTH2 #00 SWP
    .result/2 LDZ2 ADD2 .result/2 STZ2

    ( update prevs )
    .previous/2 LDZ2 .previous/3 STZ2
    .previous/1 LDZ2 .previous/2 STZ2
    ( n ) .previous/1 STZ2
    &end
RTN

@to-hex-zp ( addr-zp -- hex )
    ( res ) LIT2r 0000
    &while
    LDZk #30 - #00 SWP
    STH2r #000a ** ++ STH2
    INC LDZk ,&while JCN
    POP
    ( res ) STH2r
RTN

~lib/math32.tal
~src/common.tal

@filename "src/01.in 00
